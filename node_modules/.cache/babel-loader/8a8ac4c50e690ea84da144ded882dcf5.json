{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Daniel Lara\\\\Desktop\\\\pruebas\\\\Jehiverson\\\\tcorpintofrontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel Lara\\\\Desktop\\\\pruebas\\\\Jehiverson\\\\tcorpintofrontend\\\\src\\\\pages\\\\tickets\\\\TicketTransfer\\\\TransferSystemPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layaout from '../../parcials/Layaout';\nimport CardHeader from '../../../components/CardHeader';\nimport { storeTicketsSystemTransfer, getTicketsSystemTransfer, getStore } from '../../../functions/ticketFunction';\nimport Select from 'react-select';\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBIcon, MDBAnimation } from 'mdbreact';\n\nconst TransferSystemPage = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataStores = _useState2[0],\n        setdataSores = _useState2[1];\n\n  const _useState3 = useState([{\n    upc: null,\n    alu: null,\n    talla: null,\n    factura: null,\n    store: null\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fields = _useState4[0],\n        setFields = _useState4[1];\n\n  let datos = [];\n  getStore().then(resp => {\n    resp.map(res => datos.push({\n      value: res.name,\n      label: res.name\n    }));\n  });\n\n  let _data = stores => {\n    stores.map(res => datos.push({\n      value: res.name,\n      label: res.name\n    }));\n  };\n\n  function storeTickets() {\n    getTicketsSystemTransfer(fields);\n  } //created input\n\n\n  function handleChange(i, event, name) {\n    const values = [...fields];\n\n    if (name == \"store\") {\n      values[i][name] = event.value;\n    } else if (event.target.value == \"\") {\n      values[i][name] = null;\n    } else {\n      values[i][name] = event.target.value;\n    }\n\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({\n      upc: null,\n      alu: null,\n      talla: null,\n      factura: null\n    });\n    setFields(values);\n  }\n\n  function handleRemove(i) {\n    if (i !== 0) {\n      const values = [...fields];\n      values.splice(i, 1);\n      setFields(values);\n    }\n  }\n\n  console.log(fields);\n  const value = {\n    value: 'Selecciona una tienda',\n    label: 'Selecciona una tienda'\n  };\n  return /*#__PURE__*/React.createElement(Layaout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Tickets\",\n    icon: \"ticket-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, fields.map((field, idx) => {\n    return /*#__PURE__*/React.createElement(MDBRow, {\n      id: idx,\n      style: {\n        justifyContent: \"center\",\n        display: \"flex\"\n      },\n      key: \"\".concat(field, \"-\").concat(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Upc\",\n      type: \"text\",\n      validate: true,\n      onChange: e => handleChange(idx, e, \"upc\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Alu\",\n      type: \"text\",\n      validate: true,\n      onChange: e => handleChange(idx, e, \"alu\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Talla\",\n      type: \"text\",\n      validate: true,\n      onChange: e => handleChange(idx, e, \"talla\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Factura\",\n      type: \"text\",\n      validate: true,\n      onChange: e => handleChange(idx, e, \"factura\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"3\",\n      style: {\n        marginTop: \"26px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      onChange: e => handleChange(idx, e, \"store\"),\n      defaultValue: value,\n      options: datos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"1\",\n      style: {\n        paddingLeft: \"0px\",\n        paddingTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, idx !== 0 && /*#__PURE__*/React.createElement(MDBBtn, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => handleRemove(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 36\n      }\n    }, \"X\")));\n  }), /*#__PURE__*/React.createElement(MDBRow, {\n    style: {\n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn, {\n    color: \"light-blue\",\n    onClick: () => handleAdd(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    icon: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 76\n    }\n  }), \" Agregar\"), /*#__PURE__*/React.createElement(MDBBtn, {\n    color: \"light-green\",\n    onClick: () => storeTickets(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    icon: \"ticket-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 79\n    }\n  }), \"  Crear Ticket\"))));\n};\n\nexport default TransferSystemPage;","map":{"version":3,"sources":["C:/Users/Daniel Lara/Desktop/pruebas/Jehiverson/tcorpintofrontend/src/pages/tickets/TicketTransfer/TransferSystemPage.js"],"names":["React","useEffect","useState","Layaout","CardHeader","storeTicketsSystemTransfer","getTicketsSystemTransfer","getStore","Select","MDBRow","MDBCol","MDBInput","MDBBtn","MDBIcon","MDBAnimation","TransferSystemPage","dataStores","setdataSores","upc","alu","talla","factura","store","fields","setFields","datos","then","resp","map","res","push","value","name","label","_data","stores","storeTickets","handleChange","i","event","values","target","handleAdd","handleRemove","splice","console","log","field","idx","justifyContent","display","e","marginTop","paddingLeft","paddingTop"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\r\nimport Layaout from '../../parcials/Layaout';\r\nimport CardHeader from '../../../components/CardHeader'\r\nimport { storeTicketsSystemTransfer,getTicketsSystemTransfer, getStore } from '../../../functions/ticketFunction';\r\nimport Select from 'react-select';\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBIcon,\r\n    MDBAnimation\r\n} from 'mdbreact';\r\n\r\nconst TransferSystemPage = () => {\r\n    const [dataStores, setdataSores] = useState([]);\r\n    const [fields, setFields] = useState([{ upc: null, alu: null, talla: null, factura: null, store: null }]);\r\n    let datos = [];\r\n\r\n\r\n    getStore().then((resp)=>{ resp.map(res=> datos.push({value:res.name, label:res.name})) });\r\n\r\n\r\n   let _data = (stores) =>{\r\n        stores.map(res=> datos.push({value:res.name, label:res.name}))\r\n    }\r\n\r\n    function storeTickets() {\r\n        getTicketsSystemTransfer(fields);\r\n    }\r\n    //created input\r\n    function handleChange(i, event, name) {\r\n        const values = [...fields];\r\n        if(name == \"store\"){\r\n            values[i][name] = event.value;\r\n        }else if(event.target.value == \"\"){\r\n            values[i][name] = null;\r\n        }else{\r\n            values[i][name] = event.target.value;\r\n        }\r\n        setFields(values);\r\n      }\r\n\r\n      function handleAdd() {\r\n        const values = [...fields];\r\n        values.push({ upc: null,alu: null, talla: null, factura: null });\r\n        setFields(values);\r\n      }\r\n\r\n      function handleRemove(i) {\r\n          if(i !== 0){\r\n            const values = [...fields];\r\n            values.splice(i, 1);\r\n            setFields(values);\r\n          }\r\n      }\r\n\r\n      console.log(fields);\r\n\r\n    const value = { value: 'Selecciona una tienda', label: 'Selecciona una tienda' };\r\n    return (\r\n        <Layaout>\r\n            <br></br>\r\n            <CardHeader title=\"Tickets\" icon=\"ticket-alt\">\r\n            {fields.map((field, idx) => {\r\n                return (\r\n                <MDBRow id={idx} style={{ justifyContent: \"center\", display: \"flex\" }} key={`${field}-${idx}`}>\r\n                    <MDBCol md='2'>\r\n                        <MDBInput label='Upc' type='text' validate onChange={e => handleChange(idx, e, \"upc\")}/>\r\n                    </MDBCol>\r\n                    <MDBCol md='2'>\r\n                        <MDBInput label='Alu' type='text' validate onChange={e => handleChange(idx, e, \"alu\")}/>\r\n                    </MDBCol>\r\n                    <MDBCol md='2'>\r\n                        <MDBInput label='Talla' type='text' validate onChange={e => handleChange(idx, e, \"talla\")}/>\r\n                    </MDBCol>\r\n                    <MDBCol md='2'>\r\n                        <MDBInput label='Factura' type='text' validate onChange={e => handleChange(idx, e, \"factura\")}/>\r\n                    </MDBCol>\r\n                    <MDBCol md='3' style={{marginTop: \"26px\"}}>\r\n                        <Select\r\n                            onChange={e => handleChange(idx, e, \"store\")}\r\n                            defaultValue={value}\r\n                            options={datos}\r\n                        />\r\n                    </MDBCol>\r\n                    <MDBCol md='1' style={{paddingLeft: \"0px\",paddingTop: \"20px\"}}>\r\n                        {idx!==0&&(<MDBBtn size=\"sm\" color='danger' onClick={() => handleRemove(idx)}>X</MDBBtn>)}\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                )})}\r\n                <MDBRow style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n                    <MDBBtn color='light-blue' onClick={() => handleAdd()}><MDBIcon icon=\"plus\"/> Agregar</MDBBtn>\r\n                    <MDBBtn color='light-green' onClick={()=> storeTickets()}><MDBIcon icon='ticket-alt'/>  Crear Ticket</MDBBtn>\r\n                </MDBRow>\r\n            </CardHeader>\r\n        </Layaout>\r\n    )\r\n}\r\n\r\nexport default TransferSystemPage;"]},"metadata":{},"sourceType":"module"}