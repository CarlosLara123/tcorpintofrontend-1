{"ast":null,"code":"import axios from 'axios';\nexport const login = user => {\n  let url = process.env.REACT_APP_URL_BASE + \"/login\";\n  const data = {\n    user: user.user,\n    password: user.password\n  };\n  return axios.post(url, data).then(response => {\n    localStorage.setItem('usertoken', response.data);\n    localStorage.setItem('session', true);\n    let data = {\n      error: 0,\n      message: \"Exito\",\n      response\n    };\n    return data;\n  }).catch(err => {\n    console.log(err.response.data);\n    let data = {\n      error: 1,\n      message: err.response.data.message\n    };\n    return data;\n  });\n};\nexport const login_google = user => {\n  let url = process.env.REACT_APP_URL_BASE + \"/login/google\";\n  const data = {\n    user: user.email\n  };\n  return axios.post(url, data).then(response => {\n    localStorage.setItem('usertoken', response.data);\n    localStorage.setItem('session', true);\n    let data = {\n      error: 0,\n      message: \"Exito\"\n    };\n    return data;\n  }).catch(err => {\n    console.log(err.response.data);\n    let data = {\n      error: 1,\n      message: err.response.data.message\n    };\n    return data;\n  });\n};\nexport const data = () => {\n  let url = process.env.REACT_APP_URL_BASE + \"/\";\n  let data = {};\n  return axios.post(url, data, {\n    headers: {\n      token: localStorage.getItem('usertoken')\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n    let data = {\n      error: 0,\n      message: \"Error, comunicarse con su administrador\"\n    };\n    return data;\n  });\n};","map":{"version":3,"sources":["C:/Users/Daniel Lara/Desktop/pruebas/Jehiverson/tcorpintofrontend/src/functions/UserFunctions.js"],"names":["axios","login","user","url","process","env","REACT_APP_URL_BASE","data","password","post","then","response","localStorage","setItem","error","message","catch","err","console","log","login_google","email","headers","token","getItem"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nexport const login = (user) => {\r\n\r\n  let url = process.env.REACT_APP_URL_BASE + \"/login\";\r\n  const data = { user: user.user,password: user.password};\r\n  return axios\r\n    .post(url,data)\r\n    .then(response => {\r\n\r\n      localStorage.setItem('usertoken', response.data);\r\n      localStorage.setItem('session',true);\r\n      let data = { error: 0, message: \"Exito\", response }; \r\n      return data;\r\n      \r\n    })\r\n    .catch(err => {\r\n      console.log(err.response.data)\r\n      let data = { error: 1, message: err.response.data.message };\r\n      return data;\r\n    })\r\n}\r\n\r\nexport const login_google = user => { \r\n\r\n  let url = process.env.REACT_APP_URL_BASE + \"/login/google\";\r\n  const data = { user: user.email};\r\n  return axios\r\n    .post(url,data) \r\n    .then(response => {\r\n      \r\n      localStorage.setItem('usertoken', response.data);\r\n      localStorage.setItem('session',true);\r\n      let data = { error: 0, message: \"Exito\" }; \r\n      return data;\r\n    })\r\n    .catch(err => {\r\n      console.log(err.response.data)\r\n      let data = { error: 1, message: err.response.data.message };\r\n      return data;\r\n    })\r\n}\r\n\r\nexport const data = () => {\r\n\r\n  let url = process.env.REACT_APP_URL_BASE + \"/\";\r\n  let data = {};\r\n  return axios\r\n    .post(url,data,{\r\n      headers: { token: localStorage.getItem('usertoken') }\r\n    })\r\n    .then(response => {\r\n      return response;\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      let data = { error: 0, message: \"Error, comunicarse con su administrador\" };\r\n      return data;\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}